<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!--  
		加入 SpringSecurity:
		1. 加入 jar 包
		2. 在 web.xml 文配置 SpringSecurity 的 Filter
		3. 在 Spring 的配置文件中配置 SpringSecurity 的相关信息
		3.1 配置需要保护哪些资源 ? 以及访问这些资源需要什么权限 ?
		3.2 配置用户的信息: 包括用户名, 密码, 以及用户所有的权限. 
	-->
	
	<!-- 1. 加入 security 的命名空间 -->
	<!-- 2. 配置受保护的资源和访问该资源需要的权限. auto-config=true 会使 SpringSecurity 完成一些默认的配置. -->
	<security:http auto-config="true">
		<!-- access 所对应的权限必须以 ROLE_ -->
		<security:intercept-url pattern="/user.jsp" access="ROLE_USER"/>
		<security:intercept-url pattern="/admin.jsp" access="ROLE_ADMIN"/>
	</security:http>
	
	<!-- 3. 配置用户信息: 用户名、密码及用户所有的权限 -->
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="user" password="user" authorities="ROLE_USER"/>
				<security:user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN"/>
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
